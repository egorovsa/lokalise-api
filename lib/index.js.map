{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/services/request.ts","webpack:///./src/ts/api/languages.ts","webpack:///./src/ts/api/strings.ts","webpack:///external \"fs\"","webpack:///external \"https\"","webpack:///external \"path\"","webpack:///external \"os\"","webpack:///external \"extract-zip\"","webpack:///external \"request\"","webpack:///external \"superagent\"","webpack:///./src/ts/api/projects.ts","webpack:///./src/ts/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","superagent","request","Request","token","this","url","data","_this","Promise","resolve","reject","query","__assign","api_token","end","err","res","body","post","arrayPropsToJson","formData","JSON","parse","key","stringify","Languages","_super","__extends","listSystemLanguages","_a","sent","list","id","add","setProperties","remove","Strings","params","require","request_1","extract","os","path","http","fs","ExportEmpty","ExportSort","JavaPropertiesEncoding","Projects","import","file","createReadStream","export","uploadScreenShot","createSnapshot","title","empty","exportToPath","filesPath","tmpDir","tmpdir","exportData","response","code","tempFilePath_1","file_1","createWriteStream","bundle","full_file","pipe","on","dir","console","error","message","projects_1","strings_1","languages_1","PluralFormat","PlaceholderFormat","FileFormat","PlatformBitMask","LokaliseAPI","projects","languages","strings"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","import * as superagent from 'superagent';\n\nconst request = require('request');\nconst LOKALISE_API_URL = 'https://api.lokalise.co/api/';\n\nexport interface LokaliseResponse {\n\tstatus: string,\n\tcode: string,\n\tmessage: string\n}\n\nexport interface DefaultResponse {\n\tresponse: LokaliseResponse\n}\n\nexport class Request {\n\tconstructor(readonly token: string) {\n\t}\n\n\tprotected get<T, U>(url: string, data?: U): Promise<T> {\n\t\treturn new Promise<T>((resolve: Function, reject: Function) => {\n\t\t\tsuperagent.get(LOKALISE_API_URL + url)\n\t\t\t\t.query({...{api_token: this.token}, ...data as {}})\n\t\t\t\t.end((err, res) => {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tresolve(res.body);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(res);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t});\n\t}\n\n\tprotected post<T, U>(url: string, data?: U): Promise<T> {\n\t\tdata = this.arrayPropsToJson<U>(data);\n\n\t\treturn new Promise<T>((resolve: Function, reject: Function) => {\n\t\t\trequest.post({\n\t\t\t\turl: LOKALISE_API_URL + url,\n\t\t\t\tformData: {...{api_token: this.token}, ...data as {}}\n\t\t\t}, (err: any, res: any, body: any) => {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve(JSON.parse(body));\n\t\t\t\t} else {\n\t\t\t\t\treject(res);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected arrayPropsToJson<T extends { [key: string]: any }>(data: T): T {\n\t\tfor (let key in data) {\n\t\t\tif (\n\t\t\t\tkey === 'langs' ||\n\t\t\t\tkey === 'filter' ||\n\t\t\t\tkey === 'include_pids' ||\n\t\t\t\tkey === 'include_tags' ||\n\t\t\t\tkey === 'exclude_tags' ||\n\t\t\t\tkey === 'tags' ||\n\t\t\t\tkey === 'key_ids' ||\n\t\t\t\tkey === 'iso' ||\n\t\t\t\tkey === 'keys' ||\n\t\t\t\tkey === 'data'\n\t\t\t) {\n\t\t\t\tdata[key] = JSON.stringify(data[key])\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n}","import {DefaultResponse, Request} from \"../services/request\";\n\nexport interface Language {\n\tiso: string\n\tname: string\n\trtl: string\n}\n\nexport interface ProjectLanguage extends Language {\n\twords: string,\n\tis_default: string\n}\n\nexport interface SystemLanguagesResponse {\n\tlanguages: Language[],\n\tresponse: DefaultResponse\n}\n\nexport interface ProjectLanguagesList {\n\tlanguages: ProjectLanguage[],\n\tresponse: DefaultResponse\n}\n\nexport interface AddRemoveLanguagesParams {\n\tid: string,\n\tiso: string[]\n}\n\nexport interface SetLanguagesParams {\n\tid: string\n\toriginal_iso: string\n\tcustom_iso?: string\n\tcustom_name?: string\n}\n\nexport class Languages extends Request {\n\tconstructor(token: string) {\n\t\tsuper(token);\n\t}\n\n\tpublic async listSystemLanguages(): Promise<SystemLanguagesResponse> {\n\t\treturn await this.get<SystemLanguagesResponse, any>('language/listall');\n\t}\n\n\tpublic async list(id: string): Promise<ProjectLanguagesList> {\n\t\treturn await this.get<ProjectLanguagesList, any>('language/list', {\n\t\t\tid: id\n\t\t});\n\t}\n\n\tpublic async add(data: AddRemoveLanguagesParams): Promise<DefaultResponse> {\n\t\treturn await this.post<DefaultResponse, AddRemoveLanguagesParams>('language/add', data);\n\t}\n\n\tpublic async setProperties(data: SetLanguagesParams): Promise<DefaultResponse> {\n\t\treturn await this.post<DefaultResponse, SetLanguagesParams>('language/add', data);\n\t}\n\n\tpublic async remove(data: AddRemoveLanguagesParams): Promise<DefaultResponse> {\n\t\treturn await this.post<DefaultResponse, AddRemoveLanguagesParams>('language/remove', data);\n\t}\n}","import {DefaultResponse, LokaliseResponse, Request} from \"../services/request\";\nimport {PlaceholderFormat, PlatformBitMask, PluralFormat} from \"../index\";\n\nexport interface LocaleKey {\n\tkey: string\n\tplatform_mask: PlatformBitMask\n\tcontext: string\n\ttranslation: string\n\tplural_key: string\n\tis_hidden: string\n\tcreated_at: string\n\ttags?: string[]\n\tmodified_at: string\n\tfuzzy: string\n\tis_archived: string\n}\n\nexport interface LocaleKeyAppend extends LocaleKey {\n\tfilename_web: string,\n\thidden: number,\n\ttranslations: { [locale: string]: string },\n\tplural: string\n}\n\nexport interface StringsList {\n\tstrings: { [lang: string]: LocaleKey[] }\n\tresponse: LokaliseResponse\n}\n\nexport interface StringsListParams {\n\tid: string\n\tlangs?: object[]\n\tplatform_mask?: PlatformBitMask\n\tkeys?: object[]\n\ttags?: object[]\n\tplural_format?: PluralFormat\n\ticu_numeric?: boolean\n\tplaceholder_format?: PlaceholderFormat\n}\n\nexport interface AddKeysParams {\n\tid: number,\n\tdata: LocaleKeyAppend[]\n}\n\nexport interface AddKeysResponse {\n\tresult: {\n\t\tinserted: string,\n\t\tupdated: string\n\t},\n\tresponse: LokaliseResponse\n}\n\nexport interface RemoveKeysParams {\n\tid: number,\n\tkeys: string[]\n}\n\nexport class Strings extends Request {\n\tconstructor(token: string) {\n\t\tsuper(token);\n\t}\n\n\tpublic async list(params: StringsListParams): Promise<StringsList> {\n\t\treturn await this.post<StringsList, StringsListParams>('string/list/', params);\n\t}\n\n\tpublic async add(params: AddKeysParams): Promise<AddKeysResponse> {\n\t\treturn await this.post<AddKeysResponse, AddKeysParams>('string/set', params);\n\t}\n\n\tpublic async remove(params: RemoveKeysParams): Promise<DefaultResponse> {\n\t\treturn await this.post<DefaultResponse, RemoveKeysParams>('string/list/', params);\n\t}\n}","module.exports = require(\"fs\");","module.exports = require(\"https\");","module.exports = require(\"path\");","module.exports = require(\"os\");","module.exports = require(\"extract-zip\");","module.exports = require(\"request\");","module.exports = require(\"superagent\");","import {DefaultResponse, LokaliseResponse, Request} from \"../services/request\";\nimport {FileFormat, PlaceholderFormat, PluralFormat} from \"../index\";\n\nconst extract = require('extract-zip')\nconst os = require('os');\nconst path = require('path');\nconst http = require('https');\nconst fs = require('fs');\n\nexport enum ExportEmpty {\n\tempty = \"empty\",\n\tbase = \"base\",\n\tskip = \"skip\"\n}\n\nexport enum ExportSort {\n\tfirst_added = \"first_added\",\n\tlast_added = \"last_added\",\n\tlast_updated = \"last_updated\",\n\ta_z = \"a_z\",\n\tz_a = \"z_a\"\n}\n\nexport enum JavaPropertiesEncoding {\n\tutf8 = \"utf-8\",\n\tlatin1 = \"latin-1\"\n}\n\nexport interface ProjectsListObject {\n\tid: string\n\tname: string\n\tdesc: string\n\tcreated: string,\n\towner: string\n}\n\nexport interface ProjectsList {\n\tprojects: ProjectsListObject[],\n\tresponse: LokaliseResponse\n}\n\nexport interface AddProjectParams {\n\tname: string,\n\tdescription?: string,\n\tbase_lang?: string\n}\n\nexport interface AddProjectResponse {\n\tproject: {\n\t\tid: number\n\t},\n\tresponse: LokaliseResponse\n}\n\nexport interface ExportProjectParams {\n\tid: number\n\ttype: FileFormat\n\tlangs?: string[]\n\tuse_original?: 0 | 1\n\tfilter?: any\n\tbundle_structure?: string\n\tdirectory_prefix?: string\n\twebhook_url?: string\n\texport_all?: 0 | 1\n\texport_empty?: ExportEmpty\n\tinclude_comments?: 0 | 1\n\tinclude_pids?: string[]\n\tinclude_tags?: string[]\n\texport_sort?: ExportSort\n\treplace_breaks?: 0 | 1\n\tyaml_include_root?: 0 | 1\n\tjson_unescaped_slashes?: 0 | 1\n\tjava_properties_encoding?: JavaPropertiesEncoding\n\tjava_properties_separator?: \"=\" | \":\"\n\tno_language_folders?: 0 | 1\n\ttriggers?: any\n\tplural_format?: PluralFormat\n\ticu_numeric?: 0 | 1\n\tplaceholder_format?: PlaceholderFormat\n}\n\nexport interface ExportResponse {\n\tbundle: {\n\t\tfile: string,\n\t\tfull_file: string\n\t},\n\tresponse: LokaliseResponse\n}\n\nexport interface ImportData {\n\tid: string\n\tfile: any\n\tlang_iso: string\n\treplace?: 0 | 1\n\tconvert_placeholders?: 0 | 1\n\ticu_plurals?: 0 | 1\n\tfill_empty?: 0 | 1\n\tdistinguish?: 0 | 1\n\tuse_trans_mem?: 0 | 1\n\thidden?: 0 | 1\n\ttags?: string[]\n\tfilename?: string\n\treplace_breaks?: 0 | 1\n}\n\nexport interface ProjectImportResponse {\n\tresult: {\n\t\tskipped: number,\n\t\tinserted: number,\n\t\tupdated: number\n\t},\n\tresponse: LokaliseResponse\n}\n\nexport interface UploadScreenshot {\n\tid: string,\n\tscreenshot: string,\n\tautotag: 0 | 1,\n\tkey_ids: string[]\n}\n\nexport class Projects extends Request {\n\tconstructor(token: string) {\n\t\tsuper(token);\n\t}\n\n\tpublic async list(): Promise<ProjectsList> {\n\t\treturn await this.get<ProjectsList, any>('project/list');\n\t}\n\n\tpublic async add(data: AddProjectParams): Promise<AddProjectResponse> {\n\t\treturn await this.post<AddProjectResponse, AddProjectParams>('project/add', data);\n\t}\n\n\tpublic async remove(id: string): Promise<DefaultResponse> {\n\t\treturn await this.post<DefaultResponse, any>('project/remove', {id: id});\n\t}\n\n\tpublic async import(data: ImportData): Promise<ProjectImportResponse> {\n\t\tdata.file = fs.createReadStream(path.resolve(data.file));\n\n\t\treturn await this.post<ProjectImportResponse, ImportData>('project/import', data);\n\t}\n\n\tpublic async export(data: ExportProjectParams): Promise<ExportResponse> {\n\t\treturn await this.post<ExportResponse, ExportProjectParams>('project/export', data);\n\t}\n\n\tpublic async uploadScreenShot(data: UploadScreenshot): Promise<DefaultResponse> {\n\t\treturn await this.post<DefaultResponse, UploadScreenshot>('project/screenshot', data);\n\t}\n\n\tpublic async createSnapshot(id: string, title: string): Promise<DefaultResponse> {\n\t\treturn await this.post<DefaultResponse, any>('project/export', {\n\t\t\tid: id,\n\t\t\ttitle: title\n\t\t});\n\t}\n\n\tpublic async empty(id: string): Promise<DefaultResponse> {\n\t\treturn await this.post<DefaultResponse, any>('project/export', {\n\t\t\tid: id\n\t\t});\n\t}\n\n\tpublic async exportToPath(filesPath: string, data: ExportProjectParams): Promise<ExportResponse> {\n\t\tlet tmpDir = os.tmpdir();\n\t\tlet exportData: ExportResponse = await this.export(data);\n\n\t\treturn new Promise<ExportResponse>((resolve: Function, reject: Function) => {\n\t\t\tif (exportData.response.code === \"200\") {\n\t\t\t\tconst tempFilePath = path.resolve(tmpDir, data.id + \".zip\");\n\t\t\t\tconst file = fs.createWriteStream(tempFilePath);\n\n\t\t\t\thttp.get(exportData.bundle.full_file, (res: any) => {\n\t\t\t\t\tres.pipe(file);\n\n\t\t\t\t\tres.on('end', () => {\n\t\t\t\t\t\textract(tempFilePath, {dir: path.resolve(filesPath)}, function (err: any) {\n\t\t\t\t\t\t\tresolve(exportData);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.error(\"Export error: \" + exportData.response.code + \" - \" + exportData.response.message);\n\t\t\t\treject(exportData.response);\n\t\t\t}\n\t\t})\n\t}\n}","import {Projects} from \"./api/projects\";\nimport {Strings} from \"./api/strings\";\nimport {Languages} from \"./api/languages\";\n\nexport enum PluralFormat {\n\tgeneric = \"generic\",\n\tjson_string = \"json_string\",\n\ticu = \"icu\",\n\tarray = \"array\",\n\ti18next = \"i18next\",\n\tsymfony = \"symfony\",\n}\n\nexport enum PlaceholderFormat {\n\ti18n = \"i18n\",\n\tprintf = \"printf\",\n\tios = \"ios\",\n\ticu = \"icu\",\n\tnet = \"net\",\n\tsymfony = \"symfony\"\n}\n\nexport enum FileFormat {\n\tandroid_sdk = \"android_sdk\",\n\tios_sdk = \"ios_sdk\",\n\txml = \"xml\",\n\tstrings = \"strings\",\n\tcsv = \"csv\",\n\txlsx = \"xlsx\",\n\tpo = \"po\",\n\tproperties = \"properties\",\n\tjson = \"json\",\n\txliff = \"xliff\",\n\tplist = \"plist\",\n\tresx = \"resx\",\n\tjs = \"js\",\n\treact_native = \"react_native\",\n\tsymfony_xliff = \"symfony_xliff\",\n\txlf = \"xlf\",\n\tphp = \"php\",\n\tini = \"ini\",\n\truby_yaml = \"ruby_yaml\",\n\tyaml = \"yaml\",\n\tstf = \"stf\",\n\tts = \"ts\"\n}\n\nexport enum PlatformBitMask {\n\tIOS = 1,\n\tAndroid = 2,\n\tWeb = 4,\n\tOther = 16\n}\n\nexport class LokaliseAPI {\n\tpublic projects: Projects;\n\tpublic strings: Strings;\n\tpublic languages: Languages;\n\n\tconstructor(token: string) {\n\t\tthis.projects = new Projects(token);\n\t\tthis.languages = new Languages(token);\n\t\tthis.strings = new Strings(token);\n\t}\n}\n"],"sourceRoot":""}